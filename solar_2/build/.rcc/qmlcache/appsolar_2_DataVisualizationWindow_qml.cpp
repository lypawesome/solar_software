// /solar_2/DataVisualizationWindow.qml
#include <QtQml/qqmlprivate.h>
#include <QtCore/qdatetime.h>
#include <QtCore/qobject.h>
#include <QtCore/qstring.h>
#include <QtCore/qstringlist.h>
#include <QtCore/qurl.h>
#include <QtCore/qvariant.h>
#include <QtQml/qjsengine.h>
#include <QtQml/qjsprimitivevalue.h>
#include <QtQml/qjsvalue.h>
#include <QtQml/qqmlcomponent.h>
#include <QtQml/qqmlcontext.h>
#include <QtQml/qqmlengine.h>
#include <type_traits>
namespace QmlCacheGeneratedCode {
namespace _solar_2_DataVisualizationWindow_qml {
extern const unsigned char qmlData alignas(16) [];
extern const unsigned char qmlData alignas(16) [] = {

0x71,0x76,0x34,0x63,0x64,0x61,0x74,0x61,
0x36,0x0,0x0,0x0,0x3,0x4,0x6,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xc,0x8,0x0,0x0,0x33,0x65,0x63,0x35,
0x34,0x33,0x35,0x63,0x61,0x63,0x61,0x38,
0x63,0x32,0x35,0x62,0x65,0x38,0x31,0x64,
0x30,0x61,0x30,0x61,0x35,0x39,0x64,0x34,
0x63,0x35,0x61,0x38,0x33,0x36,0x32,0x34,
0x31,0x32,0x33,0x39,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xde,0x3c,0x3d,0x87,
0xeb,0xcc,0x81,0x4d,0xd,0xc,0xed,0x5c,
0x58,0x96,0x23,0x6e,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x23,0x0,0x0,0x0,
0x18,0x0,0x0,0x0,0x90,0x2,0x0,0x0,
0x4,0x0,0x0,0x0,0xf8,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x8,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x8,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x8,0x1,0x0,0x0,
0x9,0x0,0x0,0x0,0x8,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x2c,0x1,0x0,0x0,
0x2,0x0,0x0,0x0,0x30,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x40,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x40,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x40,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x40,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x40,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x40,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0x40,0x1,0x0,0x0,
0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xd0,0x5,0x0,0x0,
0x40,0x1,0x0,0x0,0xa0,0x1,0x0,0x0,
0x0,0x2,0x0,0x0,0x48,0x2,0x0,0x0,
0x43,0x1,0x0,0x0,0x40,0x0,0x0,0x0,
0x43,0x0,0x0,0x0,0x43,0x1,0x0,0x0,
0x50,0x0,0x0,0x0,0x53,0x0,0x0,0x0,
0x53,0x1,0x0,0x0,0x60,0x1,0x0,0x0,
0x73,0x1,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0xc0,0x7e,0xbf,
0x0,0x0,0x0,0x0,0x0,0xc0,0x8e,0xbf,
0x40,0x0,0x0,0x0,0x19,0x0,0x0,0x0,
0x9,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x1,0x0,
0xff,0xff,0xff,0xff,0xa,0x0,0x0,0x0,
0x8,0x0,0x50,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x8,0x0,0x0,0x0,
0x2e,0x0,0x3c,0x1,0x18,0x7,0x10,0x2,
0x9e,0x7,0x18,0x8,0x2e,0x2,0x18,0x9,
0x10,0x2,0x9e,0x9,0xa2,0x8,0x18,0x6,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x40,0x0,0x0,0x0,0x19,0x0,0x0,0x0,
0xb,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x1,0x0,
0xff,0xff,0xff,0xff,0xa,0x0,0x0,0x0,
0x9,0x0,0x50,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x9,0x0,0x0,0x0,
0x2e,0x3,0x3c,0x4,0x18,0x7,0x10,0x2,
0x9e,0x7,0x18,0x8,0x2e,0x5,0x18,0x9,
0x10,0x2,0x9e,0x9,0xa2,0x8,0x18,0x6,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x40,0x0,0x0,0x0,0x7,0x0,0x0,0x0,
0xd,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x1,0x0,
0xff,0xff,0xff,0xff,0x7,0x0,0x0,0x0,
0xb,0x0,0x50,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xb,0x0,0x0,0x0,
0x2e,0x6,0x3c,0x7,0x18,0x6,0x2,0x0,
0x40,0x0,0x0,0x0,0x5,0x0,0x0,0x0,
0x11,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x38,0x0,0x0,0x0,0x0,0x0,0x1,0x0,
0xff,0xff,0xff,0xff,0x7,0x0,0x0,0x0,
0xf,0x0,0x90,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xf,0x0,0x0,0x0,
0x2e,0x8,0x18,0x6,0x2,0x0,0x0,0x0,
0xf0,0x2,0x0,0x0,0xf8,0x2,0x0,0x0,
0x10,0x3,0x0,0x0,0x38,0x3,0x0,0x0,
0x50,0x3,0x0,0x0,0x60,0x3,0x0,0x0,
0x78,0x3,0x0,0x0,0x88,0x3,0x0,0x0,
0xb8,0x3,0x0,0x0,0xc0,0x3,0x0,0x0,
0xe8,0x3,0x0,0x0,0xf0,0x3,0x0,0x0,
0x18,0x4,0x0,0x0,0x30,0x4,0x0,0x0,
0x68,0x4,0x0,0x0,0x78,0x4,0x0,0x0,
0x90,0x4,0x0,0x0,0xa8,0x4,0x0,0x0,
0xe0,0x4,0x0,0x0,0xf0,0x4,0x0,0x0,
0x70,0x5,0x0,0x0,0x88,0x5,0x0,0x0,
0x98,0x5,0x0,0x0,0xb8,0x5,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x51,0x0,0x75,0x0,0x69,0x0,0x63,0x0,
0x6b,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xe,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x51,0x0,0x75,0x0,0x69,0x0,0x63,0x0,
0x6b,0x0,0x2e,0x0,0x57,0x0,0x69,0x0,
0x6e,0x0,0x64,0x0,0x6f,0x0,0x77,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0x57,0x0,0x69,0x0,
0x6e,0x0,0x64,0x0,0x6f,0x0,0x77,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x77,0x0,0x69,0x0,
0x64,0x0,0x74,0x0,0x68,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0x68,0x0,0x65,0x0,
0x69,0x0,0x67,0x0,0x68,0x0,0x74,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x74,0x0,0x69,0x0,
0x74,0x0,0x6c,0x0,0x65,0x0,0x0,0x0,
0x12,0x0,0x0,0x0,0x64,0x0,0x61,0x0,
0x74,0x0,0x61,0x0,0x20,0x0,0x76,0x0,
0x69,0x0,0x73,0x0,0x75,0x0,0x61,0x0,
0x6c,0x0,0x69,0x0,0x7a,0x0,0x61,0x0,
0x74,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x78,0x0,0x0,0x0,
0x10,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x78,0x0,0x0,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x79,0x0,0x0,0x0,
0x10,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x79,0x0,0x0,0x0,0x0,0x0,
0x8,0x0,0x0,0x0,0x6d,0x0,0x6f,0x0,
0x64,0x0,0x61,0x0,0x6c,0x0,0x69,0x0,
0x74,0x0,0x79,0x0,0x0,0x0,0x0,0x0,
0x17,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x6d,0x0,0x6f,0x0,0x64,0x0,
0x61,0x0,0x6c,0x0,0x69,0x0,0x74,0x0,
0x79,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x4,0x0,0x0,0x0,0x54,0x0,0x65,0x0,
0x78,0x0,0x74,0x0,0x0,0x0,0x0,0x0,
0x7,0x0,0x0,0x0,0x61,0x0,0x6e,0x0,
0x63,0x0,0x68,0x0,0x6f,0x0,0x72,0x0,
0x73,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x8,0x0,0x0,0x0,0x63,0x0,0x65,0x0,
0x6e,0x0,0x74,0x0,0x65,0x0,0x72,0x0,
0x49,0x0,0x6e,0x0,0x0,0x0,0x0,0x0,
0x17,0x0,0x0,0x0,0x65,0x0,0x78,0x0,
0x70,0x0,0x72,0x0,0x65,0x0,0x73,0x0,
0x73,0x0,0x69,0x0,0x6f,0x0,0x6e,0x0,
0x20,0x0,0x66,0x0,0x6f,0x0,0x72,0x0,
0x20,0x0,0x63,0x0,0x65,0x0,0x6e,0x0,
0x74,0x0,0x65,0x0,0x72,0x0,0x49,0x0,
0x6e,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x4,0x0,0x0,0x0,0x74,0x0,0x65,0x0,
0x78,0x0,0x74,0x0,0x0,0x0,0x0,0x0,
0x3c,0x0,0x0,0x0,0x54,0x0,0x68,0x0,
0x69,0x0,0x73,0x0,0x20,0x0,0x69,0x0,
0x73,0x0,0x20,0x0,0x61,0x0,0x20,0x0,
0x77,0x0,0x69,0x0,0x6e,0x0,0x64,0x0,
0x6f,0x0,0x77,0x0,0x20,0x0,0x74,0x0,
0x6f,0x0,0x20,0x0,0x73,0x0,0x65,0x0,
0x74,0x0,0x20,0x0,0x70,0x0,0x61,0x0,
0x72,0x0,0x61,0x0,0x6d,0x0,0x65,0x0,
0x74,0x0,0x65,0x0,0x72,0x0,0x73,0x0,
0x20,0x0,0x61,0x0,0x62,0x0,0x6f,0x0,
0x75,0x0,0x74,0x0,0x20,0x0,0x64,0x0,
0x61,0x0,0x74,0x0,0x61,0x0,0x20,0x0,
0x76,0x0,0x69,0x0,0x73,0x0,0x75,0x0,
0x61,0x0,0x6c,0x0,0x69,0x0,0x7a,0x0,
0x61,0x0,0x74,0x0,0x69,0x0,0x6f,0x0,
0x6e,0x0,0x2e,0x0,0x0,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0x53,0x0,0x63,0x0,
0x72,0x0,0x65,0x0,0x65,0x0,0x6e,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x51,0x0,0x74,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xb,0x0,0x0,0x0,0x57,0x0,0x69,0x0,
0x6e,0x0,0x64,0x0,0x6f,0x0,0x77,0x0,
0x4d,0x0,0x6f,0x0,0x64,0x0,0x61,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x6,0x0,0x0,0x0,0x70,0x0,0x61,0x0,
0x72,0x0,0x65,0x0,0x6e,0x0,0x74,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x10,0x0,0x0,0x0,
0x3,0x0,0x0,0x0,0x38,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x1,0x0,0x10,0x0,
0xff,0xff,0x0,0x0,0x1,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x2,0x0,0x10,0x0,0xff,0xff,0x0,0x0,
0x44,0x0,0x0,0x0,0x44,0x1,0x0,0x0,
0xcc,0x1,0x0,0x0,0x3,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0xff,0xff,
0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x7,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xfc,0x0,0x0,0x0,
0x4,0x0,0x10,0x0,0x0,0x0,0x0,0x0,
0xfc,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xfc,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xc,0x0,0x0,0x0,0x0,0x0,0x7,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xb,0x0,0x50,0x0,0xb,0x0,0xf0,0x0,
0xa,0x0,0x0,0x0,0x0,0x0,0x7,0x0,
0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x9,0x0,0x50,0x0,0x9,0x0,0x80,0x0,
0x8,0x0,0x0,0x0,0x0,0x0,0x7,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x8,0x0,0x50,0x0,0x8,0x0,0x80,0x0,
0x6,0x0,0x0,0x0,0x0,0x0,0x3,0x0,
0x0,0x0,0x0,0x0,0x7,0x0,0x0,0x0,
0x7,0x0,0x50,0x0,0x7,0x0,0xc0,0x0,
0x5,0x0,0x0,0x0,0x0,0x0,0x2,0x0,
0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x6,0x0,0x50,0x0,0x6,0x0,0xd0,0x0,
0x4,0x0,0x0,0x0,0x0,0x0,0x2,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x5,0x0,0x50,0x0,0x5,0x0,0xc0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x0,
0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xd,0x0,0x50,0x0,0xd,0x0,0x50,0x0,
0x0,0x0,0x0,0x0,0xe,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0xff,0xff,
0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x2,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x84,0x0,0x0,0x0,
0xd,0x0,0x50,0x0,0x0,0x0,0x0,0x0,
0x84,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x84,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x12,0x0,0x0,0x0,0x0,0x0,0x3,0x0,
0x0,0x0,0x0,0x0,0x13,0x0,0x0,0x0,
0x10,0x0,0x90,0x0,0x10,0x0,0xf0,0x0,
0xf,0x0,0x0,0x0,0x0,0x0,0xa,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xf,0x0,0x90,0x0,0xf,0x0,0x10,0x1,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0xff,0xff,
0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x54,0x0,0x0,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x1,0x0,0x54,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x6c,0x0,0x0,0x0,
0xf,0x0,0x90,0x0,0x0,0x0,0x0,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x6c,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x10,0x0,0x0,0x0,0x0,0x0,0x7,0x0,
0x3,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xf,0x0,0x10,0x1,0xf,0x0,0xb0,0x1,
0x0,0x0,0x0,0x0
};
QT_WARNING_PUSH
QT_WARNING_DISABLE_MSVC(4573)

template <typename Binding>
void wrapCall(const QQmlPrivate::AOTCompiledContext *aotContext, void *dataPtr, void **argumentsPtr, Binding &&binding)
{
    using return_type = std::invoke_result_t<Binding, const QQmlPrivate::AOTCompiledContext *, void **>;
    if constexpr (std::is_same_v<return_type, void>) {
       Q_UNUSED(dataPtr)
       binding(aotContext, argumentsPtr);
    } else {
        if (dataPtr) {
           new (dataPtr) return_type(binding(aotContext, argumentsPtr));
        } else {
           binding(aotContext, argumentsPtr);
        }
    }
}
extern const QQmlPrivate::AOTCompiledFunction aotBuiltFunctions[];
extern const QQmlPrivate::AOTCompiledFunction aotBuiltFunctions[] = {
{ 0, QMetaType::fromType<int>(), {  }, 
    [](const QQmlPrivate::AOTCompiledContext *aotContext, void *dataPtr, void **argumentsPtr) {
        wrapCall(aotContext, dataPtr, argumentsPtr, [](const QQmlPrivate::AOTCompiledContext *aotContext, void **argumentsPtr) {
Q_UNUSED(aotContext)
Q_UNUSED(argumentsPtr)
double r9_1;
double r7_1;
double r8_1;
double r2_2;
QObject *r2_1;
int r2_3;
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadAttachedLookup(0, aotContext->qmlScopeObject, &r2_1)) {
aotContext->setInstructionPointer(2);
aotContext->initLoadAttachedLookup(0, QQmlPrivate::AOTCompiledContext::InvalidStringId, aotContext->qmlScopeObject);
if (aotContext->engine->hasError())
    return int();
}
// generate_GetLookup
{
int retrieved;
while (!aotContext->getObjectLookup(1, r2_1, &retrieved)) {
aotContext->setInstructionPointer(4);
aotContext->initGetObjectLookup(1, r2_1, QMetaType::fromType<int>());
if (aotContext->engine->hasError())
    return int();
}
r2_2 = double(retrieved);
}
// generate_StoreReg
r7_1 = r2_2;
// generate_LoadInt
r2_2 = double(2);
// generate_Div
r2_2 = (r7_1 / r2_2);
// generate_StoreReg
r8_1 = r2_2;
// generate_LoadQmlContextPropertyLookup
{
int retrieved;
while (!aotContext->loadScopeObjectPropertyLookup(2, &retrieved)) {
aotContext->setInstructionPointer(14);
aotContext->initLoadScopeObjectPropertyLookup(2, QMetaType::fromType<int>());
if (aotContext->engine->hasError())
    return int();
}
r2_2 = double(retrieved);
}
// generate_StoreReg
r9_1 = r2_2;
// generate_LoadInt
r2_2 = double(2);
// generate_Div
r2_2 = (r9_1 / r2_2);
// generate_Sub
r2_3 = QJSNumberCoercion::toInteger((r8_1 - r2_2));
// generate_Ret
return r2_3;
});}
 },{ 1, QMetaType::fromType<int>(), {  }, 
    [](const QQmlPrivate::AOTCompiledContext *aotContext, void *dataPtr, void **argumentsPtr) {
        wrapCall(aotContext, dataPtr, argumentsPtr, [](const QQmlPrivate::AOTCompiledContext *aotContext, void **argumentsPtr) {
Q_UNUSED(aotContext)
Q_UNUSED(argumentsPtr)
double r9_1;
double r7_1;
double r8_1;
double r2_2;
int r2_3;
QObject *r2_1;
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadAttachedLookup(3, aotContext->qmlScopeObject, &r2_1)) {
aotContext->setInstructionPointer(2);
aotContext->initLoadAttachedLookup(3, QQmlPrivate::AOTCompiledContext::InvalidStringId, aotContext->qmlScopeObject);
if (aotContext->engine->hasError())
    return int();
}
// generate_GetLookup
{
int retrieved;
while (!aotContext->getObjectLookup(4, r2_1, &retrieved)) {
aotContext->setInstructionPointer(4);
aotContext->initGetObjectLookup(4, r2_1, QMetaType::fromType<int>());
if (aotContext->engine->hasError())
    return int();
}
r2_2 = double(retrieved);
}
// generate_StoreReg
r7_1 = r2_2;
// generate_LoadInt
r2_2 = double(2);
// generate_Div
r2_2 = (r7_1 / r2_2);
// generate_StoreReg
r8_1 = r2_2;
// generate_LoadQmlContextPropertyLookup
{
int retrieved;
while (!aotContext->loadScopeObjectPropertyLookup(5, &retrieved)) {
aotContext->setInstructionPointer(14);
aotContext->initLoadScopeObjectPropertyLookup(5, QMetaType::fromType<int>());
if (aotContext->engine->hasError())
    return int();
}
r2_2 = double(retrieved);
}
// generate_StoreReg
r9_1 = r2_2;
// generate_LoadInt
r2_2 = double(2);
// generate_Div
r2_2 = (r9_1 / r2_2);
// generate_Sub
r2_3 = QJSNumberCoercion::toInteger((r8_1 - r2_2));
// generate_Ret
return r2_3;
});}
 },{ 2, QMetaType::fromType<int>(), {  }, 
    [](const QQmlPrivate::AOTCompiledContext *aotContext, void *dataPtr, void **argumentsPtr) {
        wrapCall(aotContext, dataPtr, argumentsPtr, [](const QQmlPrivate::AOTCompiledContext *aotContext, void **argumentsPtr) {
Q_UNUSED(aotContext)
Q_UNUSED(argumentsPtr)
int r2_1;
// generate_GetLookup
while (!aotContext->getEnumLookup(7, &r2_1)) {
aotContext->setInstructionPointer(4);
aotContext->initGetEnumLookup(7, []() { static const auto t = QMetaType::fromName("Qt"); return t; }().metaObject(), "WindowModality", "WindowModal");
if (aotContext->engine->hasError())
    return int();
}
// generate_Ret
return r2_1;
});}
 },{ 3, QMetaType::fromType<QObject*>(), {  }, 
    [](const QQmlPrivate::AOTCompiledContext *aotContext, void *dataPtr, void **argumentsPtr) {
        wrapCall(aotContext, dataPtr, argumentsPtr, [](const QQmlPrivate::AOTCompiledContext *aotContext, void **argumentsPtr) {
Q_UNUSED(aotContext)
Q_UNUSED(argumentsPtr)
QObject *r2_1;
// generate_LoadQmlContextPropertyLookup
while (!aotContext->loadScopeObjectPropertyLookup(8, &r2_1)) {
aotContext->setInstructionPointer(2);
aotContext->initLoadScopeObjectPropertyLookup(8, []() { static const auto t = QMetaType::fromName("QQuickItem*"); return t; }());
if (aotContext->engine->hasError())
    return static_cast<QObject *>(nullptr);
}
// generate_Ret
return r2_1;
});}
 },{ 0, QMetaType::fromType<void>(), {}, nullptr }};
QT_WARNING_POP
}
}
